= Lift-Json JSR-311 Provider =

This library implements a Provider adapter for JSR-311 (JAX-RS) to allow the lift-json library to be used for mapping between JSON documents and Scala case classes.

The Provider can then be used within a JSR-311 implementation (e.g. Jersey) to support automated mapping of incoming JSON messages to Scala case classes and returned case class instances back to JSON.

== Configuration ==

Configuration for the provider is simple. All you need to do is register the Provider with the JSR-311 implementation. For Jersey, this can be done as follows:

Using a manual configuration:

    import templemore.liftjson.provider.LiftJsonProvider

    val resourceConfig = new DefaultResourceConfig(classOf[LiftJsonProvider])
    // Create the server passing the resource config

Or, if using Spring and Jersey, in the spring context config:

    <bean class="templemore.liftjson.provider.LiftJsonProvider" scope="singleton"/>

Once registered, the provider will handle all JSON mappings where the object to map to is a Scala case class. Any non-Scala case class objects will be left unhandled so that they can be processed by an alternative JSON provider implementation (if installed).





== Thoughts ==

Annotation @Transformer
methode that takes a JValue and returns an updated JValue
intercepts after the ast is created but before the final transformation is applied

Annotation @Replacer
changes the case class that is used to parse the json into or to output
this case class is then converted into the target class

Transformers and Replacers are generated by a factory.
The default factory created class instances
An alternative factory can be set on the provider to allow custom factories to be created, for example via spring

